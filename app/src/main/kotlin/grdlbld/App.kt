/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package grdlbld

import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.runBlocking
import kotlinx.coroutines.launch
import kotlinx.coroutines.delay
import mu.KotlinLogging


private val staticLogger = KotlinLogging.logger {}

suspend fun sendMpesaTransaction() {
    val curr_thread =  Thread.currentThread().name
    staticLogger.info{" sending mpesa trx initiated!!on proc = $curr_thread"}
    
    delay(1000L)// TO make sure the main thread completes first [sim network and delays to make sure main thread has exited]
    staticLogger.info("Completed sending mpesa transaction successfully !!")
}


fun completeTheValidation(){
    val curr_thread =  Thread.currentThread().name
    staticLogger.info("Validation Complete successfully!!on proc = $curr_thread")
}

fun main() {
    GlobalScope.launch{
        sendMpesaTransaction()
    }
    completeTheValidation()
    staticLogger.info("validation session closed!!")
    Thread.sleep(2000)
}

